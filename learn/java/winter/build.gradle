plugins {
    id "java"
    id "application"
	id "idea"
	id "org.beryx.jlink" version "2.16.4"
	id "com.github.ben-manes.versions" version "0.27.0"
    id "org.javamodularity.moduleplugin" version "1.6.0"
	id "se.patrikerdes.use-latest-versions" version "0.2.13"
	id "org.springframework.boot" version "2.2.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

// Application Configuration
ext {
	appName = "Winter"
	appModuleName = "eu.pineman.learn.winter"
	appMainClass = "eu.pineman.learn.winter.App"
}

mainClassName = "${ext.appModuleName}/${ext.appMainClass}"
version = "0.1.0-SNAPSHOT"

dependencies {

    implementation "org.springframework.boot:spring-boot-dependencies:2.2.1.RELEASE"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.2.1.RELEASE"
    testImplementation "org.testng:testng:6.14.3"
    //testImplementation "org.testng:testng:7.0.0" // module not found ?
}

test {
    // Use TestNG for unit tests
    useTestNG()
}

repositories {
	mavenCentral()
}

sourceCompatibility = 13
targetCompatibility = 13

jlink {
	imageZip = project.file("${buildDir}/distributions/${appName}-${version}.zip")
	options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages"]
	launcher {
		name = "${appName}"
	}
}

jar {
	manifest {
		attributes "Main-Class": appMainClass
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

if (project.hasProperty("debugRun") && project.debugRun as boolean) {
	run {
		jvmArgs "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=*:5005"
	}
}
